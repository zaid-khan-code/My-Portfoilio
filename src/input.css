@tailwind base;
@tailwind components;
@tailwind utilities;

@keyframes fadeInLeft {
    0% {
        opacity: 0;
        transform: translateX(-40px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes fadeInRight {
    0% {
        opacity: 0;
        transform: translateX(40px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

.will-animate {
    opacity: 0;
}

.animate-in-left {
    animation: fadeInLeft 600ms ease-out forwards;
}

.animate-in-right {
    animation: fadeInRight 600ms ease-out forwards;
}

@keyframes fadeInUp {
    0% {
        opacity: 0;
        transform: translateY(40px);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.animate-in-up {
    animation: fadeInUp 600ms ease-out forwards;
}

.motion-reduce .animate-in-left,
.motion-reduce .animate-in-right {
    animation: none;
    opacity: 1;
}

.motion-reduce .animate-in-up {
    animation: none;
    opacity: 1;
}

@layer base {
    body {
        background-color: #0b0e13;
        overflow-x: hidden;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        margin: 0;
        font-family: ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
        scroll-behavior: smooth;
    }

    html {
        overflow-x: hidden;
    }
}

@layer utilities {
    .shamado {
        /* shadow-[0_20px_40px_-8px_hsl(191_95%_55%_/_.2)] */
        box-shadow: 0 20px 40px -8px hsl(191, 95%, 55%, .2);
    }

    .slide-in-top {
        animation: slideInTopFade 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    /* Additional directional slide + fade animations */
    .slide-in-left-fade {
        animation: slideInLeftFade 2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    .slide-in-right-fade {
        animation: slideInRightFade 2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    .slide-in-bottom-fade {
        animation: slideInBottomFade 2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    .left-animated-sa {
        animation: left-animated 2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    .right-animated-sa {
        animation: right-animated 2s cubic-bezier(0.4, 0, 0.2, 1) forwards;

    }

    .down-animated-sa {
        animation: down-animated 2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    .pop-in-fade {
        animation: popInFade 1.5s cubic-bezier(0.22, 1, 0.36, 1) forwards;
    }

    /* Simple animation delay helpers */
    .anim-delay-0 {
        animation-delay: 0ms;
    }

    .anim-delay-100 {
        animation-delay: 100ms;
    }

    .anim-delay-200 {
        animation-delay: 200ms;
    }

    .anim-delay-300 {
        animation-delay: 300ms;
    }



    .leftAnRightAnime {
        animation: left-Right 2s 1 cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    .rotate {
        background: linear-gradient(100deg,
                hsla(191, 95%, 55%, 0.1) 0%,
                transparent 30%,
                hsla(280, 100%, 70%, 0.1) 60%,
                transparent 90%,
                hsla(191, 95%, 55%, 0.1) 100%);
        animation: spin 9s linear infinite;
    }

    .bg-clip-text {
        -webkit-background-clip: text;
        background-clip: text;
    }

    /* Progress Bar Animation */
    .skill-progress-bar {
        transform: translateX(-100%) !important;
        transition: transform 3s cubic-bezier(0.4, 0, 0.2, 1);
        will-change: transform;
    }

    .skill-progress-bar.animate-progress {
        transform: var(--progress-transform) !important;
    }

    .popOut {
        animation: popOut 3s cubic-bezier(0.4, 0, 0.2, 1);
        will-change: transform;

    }


    .contact-card {
        opacity: 0;
        transform: translateY(20px);
        /* Starts shifted down by 20px */
        transition: opacity 0.5s ease-out, transform 0.5s ease-out;
    }

    /* Class added when in viewport (use JS to toggle this) */
    .contact-card.in-view {
        opacity: 1;
        transform: translateY(0);
    }

    /* Staggered delays for each item (apply these classes based on index, e.g., .contact-card:nth-child(1) gets .delay-0, etc.) */
    .contact-card.delay-0 {
        transition-delay: 0s;
    }

    .contact-card.delay-1 {
        transition-delay: 0.1s;
    }

    .contact-card.delay-2 {
        transition-delay: 0.2s;
    }

    .contact-card.delay-3 {
        transition-delay: 0.3s;
    }

    /* Optional: Keyframes alternative if you prefer animation over transition (add .animate class instead of .in-view) */
    @keyframes fadeSlideUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Service Item Animation */
    .service-item {
        opacity: 0;
        transform: translateX(20px);
        /* Starts shifted right by 20px */
        transition: opacity 0.5s ease-out, transform 0.5s ease-out;
    }

    /* Class added when in viewport (use JS to toggle this) */
    .service-item.in-view {
        opacity: 1;
        transform: translateX(0);
    }

    /* Staggered delays for each item */
    .service-item.delay-0 {
        transition-delay: 0s;
    }

    .service-item.delay-1 {
        transition-delay: 0.1s;
    }

    .service-item.delay-2 {
        transition-delay: 0.2s;
    }

    /* Optional: Keyframes alternative if you prefer animation over transition */
    @keyframes fadeSlideLeft {
        from {
            opacity: 0 !important;
            transform: translateX(20px);
        }

        to {
            opacity: 1 !important;
            transform: translateX(0);
        }
    }

    .service-item.animate {
        animation: fadeSlideLeft 0.5s ease-out forwards;
    }

    /* Staggered animation delays */
    .service-item.animate.delay-0 {
        animation-delay: 0s;
    }

    .service-item.animate.delay-1 {
        animation-delay: 0.1s;
    }

    .service-item.animate.delay-2 {
        animation-delay: 0.2s;
    }







    @keyframes popOut {
        from {
            transform: scale(0.4);
        }

    }







    @keyframes spin {
        from {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(360deg);
        }
    }

    @keyframes slideInTopFade {
        from {
            transform: translateY(-50px);
            opacity: 0.3;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }


    }

    @keyframes slideInLeftFade {
        from {
            transform: translateX(-50vw);
            opacity: 0.3;
        }

        to {
            transform: translateX(0);
            opacity: 1;
        }
    }

    @media (min-width: 769px) {
        @keyframes slideInLeftFade {
            from {
                transform: translateX(-100vw);
                opacity: 0.3;
            }

            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
    }

    @keyframes slideInRightFade {
        from {
            transform: translateX(50vw);
            opacity: 0.1;
        }

        to {
            transform: translateX(0);
            opacity: 1;
        }
    }

    @media (min-width: 769px) {
        @keyframes slideInRightFade {
            from {
                transform: translateX(100vw);
                opacity: 0.1;
            }

            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
    }

    @keyframes slideInBottomFade {
        from {
            transform: translateY(50vh);
            opacity: 0.3;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    @media (min-width: 769px) {
        @keyframes slideInBottomFade {
            from {
                transform: translateY(100vh);
                opacity: 0.3;
            }

            to {
                transform: translateY(0);
                opacity: 1;
            }
        }
    }

    @keyframes popInFade {
        from {
            transform: scale(1.25);
            opacity: 0.3;
        }

        to {
            transform: scale(1);
            opacity: 1;
        }
    }

    @keyframes left-Right {
        from {
            top: 1400px;
            left: 1200px;
        }
    }

    @keyframes left-animated {
        0% {
            transform: translateX(-30px);
            opacity: 0.1;
        }

        100% {
            transform: translateX(0vw);
            opacity: 1;
        }
    }

    @media (min-width: 769px) {
        @keyframes left-animated {
            0% {
                transform: translateX(-5vw);
                opacity: 0.1;
            }

            100% {
                transform: translateX(0vw);
                opacity: 1;
            }
        }
    }

    @keyframes right-animated {
        0% {
            transform: translateX(30px);
            opacity: 0.1;
        }

        100% {
            transform: translateX(0vw);
            opacity: 1;
        }
    }

    @media (min-width: 769px) {
        @keyframes right-animated {
            0% {
                transform: translateX(5vw);
                opacity: 0.1;
            }

            100% {
                transform: translateX(0vw);
                opacity: 1;
            }
        }
    }

    @keyframes down-animated {
        0% {
            transform: translateY(30px);
            opacity: 0.1;
        }

        100% {
            transform: translateX(0vw);
            opacity: 1;
        }
    }

    @media (min-width: 769px) {
        @keyframes down-animated {
            0% {
                transform: translateY(5vw);
                opacity: 0.1;
            }

            100% {
                transform: translateX(0vw);
                opacity: 1;
            }
        }
    }
}